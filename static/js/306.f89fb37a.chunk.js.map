{"version":3,"file":"static/js/306.f89fb37a.chunk.js","mappings":"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","sources":["components/Card/Card.styled.js","components/Card/Card.js","page/MovieDetails.styled.js","page/MovieDetails.js","services/api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Section = styled.div`\n  display: flex;\n  gap: 30px;\n  margin-top: 30px;\n`;\n\nexport const Img = styled.img`\n  max-height: 500px;\n  max-width: 300px;\n`;\n\nexport const Info = styled.div`\n  // padding-top: 20px;\n  max-width: 1100px;\n`;\n\nexport const List = styled.ul`\n  margin-top: 20px;\n  display: flex;\n  gap: 10px;\n  font-size: 18px;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-content: flex-start;\n  align-items: flex-start;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const StyledLink = styled(Link)`\n  font-size: 14px;\n  margin-right: 20px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: rgb(92, 101, 183);\n  text-decoration: none;\n  color: #ffffff;\n\n  &:hover,\n  &:focus {\n    background-color: #1908a6;\n    color: #ffffff;\n  }\n`;\n\nexport const AddInfo = styled.div`\n  padding-top: 10px;\n  border-top: 2px solid grey;\n  border-bottom: 2px solid grey;\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  Img,\n  List,\n  Item,\n  Section,\n  Info,\n  StyledLink,\n  AddInfo,\n} from './Card.styled';\n\nconst MovieCard = ({ movie }) => {\n  const { title, poster_path, vote_average, overview, genres } = movie;\n  const location = useLocation();\n\n  if (!title) {\n    return <div>Loading ...</div>;\n  }\n  const posterUrl = poster_path\n    ? `https://image.tmdb.org/t/p/w300/${poster_path}`\n    : 'https://via.placeholder.com/300x500.png?text=No+photo';\n\n  const vote = vote_average ? `${(vote_average * 10).toFixed(0)}%` : 'No rate';\n\n  return (\n    <>\n      <Section>\n        <Img src={posterUrl} alt={`${title} poster`} />\n        <br />\n        <Info>\n          <h2>{title ?? 'Unknown'}</h2>\n          <br />\n          <p>Vote: {vote}</p>\n          <br />\n          <p>\n            <b>Overview:</b> {overview}\n          </p>\n          <br />\n          {genres && genres.length > 0 && (\n            <p>\n              <b>Genres:</b>\n              {genres.map(genre => genre.name).join(', ')}\n            </p>\n          )}\n        </Info>\n      </Section>{' '}\n      <br />\n      <AddInfo>\n        <List>\n          {' '}\n          <p> Additional information </p> <br />\n          <Item>\n            <StyledLink\n              to=\"cast\"\n              state={{ from: location?.state?.from ?? '/' }}\n            >\n              Cast\n            </StyledLink>\n          </Item>\n          <Item>\n            <StyledLink\n              to=\"reviews\"\n              state={{ from: location?.state?.from ?? '/' }}\n            >\n              Reviews\n            </StyledLink>\n          </Item>{' '}\n          <br />\n        </List>\n      </AddInfo>\n    </>\n  );\n};\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string.isRequired,\n    vote_average: PropTypes.number,\n    title: PropTypes.string.isRequired,\n    overview: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({ name: PropTypes.string.isRequired })\n    ),\n  }).isRequired,\n};\n\nexport default MovieCard;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding: 20px 40px;\n`;\n\nexport const Button = styled.button`\n  padding: 10px;\n  display: flex;\n  align-items: center;\n  font-size: 14px;\n  border: 1px solid;\n  border-radius: 6px;\n  background-color: rgb(92, 101, 183);\n  color: rgb(255, 255, 255);\n\n  &:hover,\n  &:focus {\n    background-color: rgb(25, 8, 166);\n    color: #ffffff;\n  }\n`;\n","import { Suspense } from 'react';\nimport { useEffect, useState } from 'react';\nimport { useParams, Outlet, useLocation, Link } from 'react-router-dom';\nimport { fetchById } from '../services/api';\nimport MovieCard from '../components/Card/Card';\nimport { Button, Container } from './MovieDetails.styled';\n\nconst MovieDelails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const [findMovie, setFindMovie] = useState({});\n\n  useEffect(() => {\n    const fetchFindMovie = async movieId => {\n      try {\n        const movieData = await fetchById(movieId);\n        setFindMovie(movieData);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchFindMovie(movieId);\n  }, [movieId]);\n\n  return (\n    <main>\n      <Container>\n        <Link to={location?.state?.from ?? '/'}>\n          <Button type=\"button\">Back to list</Button>\n        </Link>\n        <MovieCard movie={findMovie} />{' '}\n        <Suspense fallback={<div>Loading...</div>}>\n          <Outlet />\n        </Suspense>\n      </Container>\n    </main>\n  );\n};\n\nexport default MovieDelails;\n","import axios from 'axios';\n\nconst baseURL = 'https://api.themoviedb.org';\nconst API_KEY = '164c914423fd26eaa1b5d10be8cf42cc';\n\nexport const fetchTrends = async () => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return response.data;\n};\n\nexport const fetchByName = async query => {\n  const response = await axios.get(\n    `${baseURL}/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n\n  return response.data;\n};\n\nexport const fetchById = async movieId => {\n  const response = await axios.get(\n    `${baseURL}/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n\nexport const fetchCast = async movieId => {\n  const response = await axios.get(\n    `${baseURL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(\n    `${baseURL}/3/movie/${movieId}}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return response.data;\n};\n"],"names":["Section","styled","Img","Info","List","Item","StyledLink","Link","AddInfo","movie","title","poster_path","vote_average","overview","genres","location","useLocation","posterUrl","vote","toFixed","src","alt","length","map","genre","name","join","to","state","from","Container","Button","movieId","useParams","useState","findMovie","setFindMovie","useEffect","fetchFindMovie","fetchById","movieData","console","log","type","Suspense","fallback","baseURL","API_KEY","fetchTrends","axios","response","data","fetchByName","query","fetchCast","fetchReviews"],"sourceRoot":""}